# VM Infrastructure Configuration
# This file defines the settings for creating Azure VMs for ML workloads

# Resource group configuration
resourceGroup: "slm-vm-demo"
location: "eastus"

# VM configuration
vm:
  # Number of VMs to create
  count: 2
  
  # VM SKU (size) - Examples:
  # - Standard_NC6s_v3 (1x V100 GPU)
  # - Standard_NC12s_v3 (2x V100 GPU)
  # - Standard_NC24s_v3 (4x V100 GPU)
  # - Standard_NC40adis_H100_v5 (1x H100 GPU)
  # - Standard_NC80adis_H100_v5 (2x H100 GPU)
  vmSize: "Standard_NC6s_v3"
  
  # VM name prefix (will be appended with index)
  namePrefix: "slm-vm"
  
  # Priority: Standard or Spot (low-priority)
  priority: "Standard"  # Options: Standard, Spot
  
  # Eviction policy for Spot VMs (only applies if priority is Spot)
  evictionPolicy: "Deallocate"  # Options: Deallocate, Delete
  
  # Max price for Spot VMs (-1 means pay up to on-demand price)
  maxPrice: -1
  
  # OS Image configuration
  image:
    publisher: "Canonical"
    offer: "0001-com-ubuntu-server-jammy"
    sku: "22_04-lts-gen2"
    version: "latest"
  
  # OS disk configuration
  osDisk:
    sizeGB: 256
    storageType: "Premium_LRS"  # Options: Standard_LRS, Premium_LRS, StandardSSD_LRS
  
  # Admin user configuration
  adminUsername: "azureuser"
  
  # SSH public key path (will be read during deployment)
  sshPublicKeyPath: "~/.ssh/id_rsa.pub"

# Network configuration
network:
  # Virtual network name
  vnetName: "slm-vnet"
  vnetAddressPrefix: "10.0.0.0/16"
  
  # Subnet name and prefix
  subnetName: "slm-subnet"
  subnetAddressPrefix: "10.0.1.0/24"
  
  # Network security group
  nsgName: "slm-nsg"
  
  # Allow SSH access from these IP ranges (0.0.0.0/0 for all, or specify your IP)
  allowedSshSources:
    - "0.0.0.0/0"

# Post-deployment configuration
postDeploy:
  # GitHub repository to clone
  githubRepo: "https://github.com/Alanwe/SLM-FT-Inference.git"
  
  # Target directory for repository on VMs
  repoTargetDir: "/home/azureuser/SLM-FT-Inference"
  
  # Python version to check (minimum required version)
  pythonVersion: "3.11"
  
  # Docker images to pull
  dockerImages:
    - "nvidia/cuda:12.2.0-runtime-ubuntu22.04"
    - "huggingface/transformers-pytorch-gpu:latest"
  
  # Additional commands to run (optional)
  customCommands: []
